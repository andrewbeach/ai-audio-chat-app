services:
  server:
    build:
      context: ./packages/server
    environment:
      NODE_ENV: development
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 4000:4000
    depends_on:
      db:
        condition: service_healthy
  ui: 
    build:
      context: ./packages/ui
    restart: always
    environment:
      - NODE_ENV=development
    ports:
      - 3000:3000

  ai: 
    build: ./packages/ai
    volumes:
      - ./packages/ai:/app
    stop_signal: SIGINT
    ports:
      - 5001:5001

  minio:
    image: quay.io/minio/minio
    volumes:
      - ./minio-data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    command: minio server /data
    
  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - ./packages/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
  
networks:
  default:
    driver: bridge

volumes:
  db-data:
